name: Build and Push Docker Image to ECR

on:
  push: # コードがプッシュされた時に実行
    branches:
      - main # main ブランチへのプッシュをトリガーとする

env:
  AWS_REGION: ap-southeast-2 # あなたのAWSリージョンに合わせる
  ECR_REPOSITORY: my-fastapi-app-app-repo # あなたのECRリポジトリ名に合わせる

permissions:
  id-token: write # OIDC認証に必要な権限
  contents: read  # リポジトリのコードを読み込むための権限

jobs:
  build_and_push:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- AWS認証 (OIDC) ---
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Step 1 で作成した ECR Push 用の IAM ロールの ARN を指定
          role-to-assume: ${{ secrets.ECR_PUSH_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # --- ECRへのログイン ---
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # --- Dockerイメージのビルドとプッシュ (X86_64アーキテクチャ) ---
      - name: Build and push Docker image (X86_64)
        run: |
          # buildx を使用してマルチプラットフォームビルド環境をセットアップ
          docker buildx create --use
          docker buildx inspect --bootstrap

          # X86_64 (linux/amd64) 用にビルドし、直接ECRにプッシュ
          # ${{ github.sha }} は、コミットハッシュを表すGitHub Actionsの組み込み変数。一意なタグとして利用。
          # latest タグもプッシュして、ECSサービスが常に最新を参照できるようにする。
          docker buildx build --platform linux/amd64 -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }} --push .
          docker buildx build --platform linux/amd64 -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest --push .